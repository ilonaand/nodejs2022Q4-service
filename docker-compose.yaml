version: "3.8"
services:
  webapp:
    image: ilonaand/server_image
    container_name: server
    restart: always
    env_file: .env
    build:
      context: .
      dockerfile: dockerfile
    ports:
      - ${PORT}:${PORT}
    volumes:
      - ".:/app"
      - ./node_modules:/usr/app/node_modules
    networks:
      - app_bridge

    # Сервис будет запущен, только после старта db
    depends_on:
     - database

  # database
  database:
    container_name: db_container
      # Имя образа. Здесь мы используем базу данных Postgres
    image: postgres:latest
    restart: always
    env_file: .env
    environment:
      - POSTGRES_USER=${TYPEORM_USERNAME}
      - POSTGRES_PASSWORD=${TYPEORM_PASSWORD}
      - POSTGRES_DB=${TYPEORM_DATABASE}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - ${TYPEORM_PORT_POSTGRES}:${TYPEORM_PORT_POSTGRES}
    networks:
      - app_bridge

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ilonaand@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - app_bridge

networks:
  app_bridge:
    driver: bridge
    name: 'app_bridge'
volumes:
  pgdata:
  pgadmin-data:
  node_modules: